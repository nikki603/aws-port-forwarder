{
  "name": "aws-port-forwarder",
  "displayName": "AWS SSM port forwarder",
  "description": "Uses AWS SSM to manage port forwarding from VS Code",
  "publisher": "NicoleSands",
  "version": "1.1.1",
  "engines": {
    "vscode": "^1.79.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "AWS",
    "EC2",
    "SSM"
  ],
  "repository": {
    "type": "github",
    "url": "https://github.com/nikki603/aws-port-forwarder"
  },
  "license": "MIT",
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "configuration":{
      "title": "AWS Session Manager",
      "type": "object",
      "properties": {
        "apf.rdp.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable Microsoft Remote Desktop usage (Supported on Windows and MacOS)",
          "order": 0
        },
        "apf.rdp.portRange.startNumber": {
          "type": "number",
          "default": 20000,
          "minimum": 1,
          "maximum": 65535,
          "description": "Localhost network port range used for RDP port forwarding. Choose a range that is not used by other applications - start",
          "order": 1
        },
        "apf.rdp.portRange.endNumber": {
          "type": "number",
          "default": 29999,
          "minimum": 1,
          "maximum": 65535,
          "description": "Localhost network port range used for RDP port forwarding. Choose a range that is not used by other applications - end",
          "order": 2
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "session-explorer",
          "title": "AWS Session Manager",
          "icon": "$(symbol-variable)"
        }
      ]
    },
    "views": {
      "session-explorer": [
        {
          "id": "apf.instance-list",
          "name": "Instances"
        },
        {
          "id": "apf.session-list",
          "name": "Sessions"
        }
      ]
    },
    "commands": [
      {
        "command": "apf.ec2-instances.configureProfile",
        "title": "Configure Profile",
        "icon": "$(account)"
      },
      {
        "command": "apf.ec2-instances.configureRegion",
        "title": "Configure Region",
        "icon": "$(globe)"
      },
      {
        "command": "apf.ec2-instances.refresh",
        "title": "Refresh Instance List",
        "icon": "$(refresh)"
      },
      {
        "command": "apf.session-list.refresh",
        "title": "Refresh Session List",
        "icon": "$(refresh)"
      },
      {
        "command": "apf.connectRdp",
        "title": "Connect via RDP"
      },
      {
        "command": "apf.connectRemotePortForward",
        "title": "Connect to Remote Host..."
      },
      {
        "command": "apf.connectPortForward",
        "title": "Connect to Port..."
      },
      {
        "command": "apf.terminateSession",
        "title": "Terminate Session"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "apf.ec2-instances.refresh",
          "when": "view == apf.instance-list",
          "group": "navigation"
        },
        {
          "command": "apf.session-list.refresh",
          "when": "view == apf.session-list",
          "group": "navigation"
        },
        {
          "command": "apf.ec2-instances.configureProfile",
          "when": "view == apf.instance-list",
          "group": "navigation"
        },
        {
          "command": "apf.ec2-instances.configureRegion",
          "when": "view == apf.instance-list",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "apf.connectPortForward",
          "when": "view == apf.instance-list && viewItem =~ /^instance/",
          "group": "0@2"
        },
        {
          "command": "apf.connectRdp",
          "when": "(isWindows || isMac) && config.apf.rdp.enabled && view == apf.instance-list && viewItem == instance.windows",
          "group": "0@1"
        },
        {
          "command": "apf.connectRemotePortForward",
          "when": "view == apf.instance-list && viewItem =~ /^instance/",
          "group": "0@3"
        },
        {
          "command": "apf.terminateSession",
          "when": "view == apf.session-list && viewItem =~ /^session/",
          "group": "0@1"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "publish": "vsce publish"
  },
  "dependencies": {
    "@aws-sdk/client-ec2": "3.303.0",
    "@aws-sdk/client-ssm": "3.303.0",
    "@aws-sdk/types": "3.303.0",
    "@aws-sdk/client-sts": "3.303.0",
    "@aws-sdk/credential-providers": "3.405.0",
    "@aws-sdk/shared-ini-file-loader": "3.303.0"
  },
  "devDependencies": {
    "@types/vscode": "^1.79.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.1.3",
    "@vscode/test-electron": "^2.3.2"
  }
}
